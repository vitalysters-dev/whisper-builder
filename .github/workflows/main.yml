name: Build 64-bit Optimized Whisper.cpp for CoreELEC

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Install Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git make cmake g++-aarch64-linux-gnu libc6-arm64-cross binutils-aarch64-linux-gnu

      - name: Clone whisper.cpp STABLE repository
        uses: actions/checkout@v4
        with:
          repository: ggml-org/whisper.cpp
          ref: v1.6.0
          submodules: true

      - name: Create Toolchain File
        run: |
          echo 'set(CMAKE_SYSTEM_NAME Linux)' > aarch64-toolchain.cmake
          echo 'set(CMAKE_SYSTEM_PROCESSOR aarch64)' >> aarch64-toolchain.cmake
          echo 'set(CMAKE_C_COMPILER aarch64-linux-gnu-gcc)' >> aarch64-toolchain.cmake
          echo 'set(CMAKE_CXX_COMPILER aarch64-linux-gnu-g++)' >> aarch64-toolchain.cmake

      - name: Compile with CMake (64-bit target)
        run: |
          mkdir build && cd build
          # --- ФИНАЛЬНОЕ ИСПРАВЛЕНИЕ: Чистая 64-битная сборка ---
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=../aarch64-toolchain.cmake \
            -DCMAKE_CXX_FLAGS="-O3 -mtune=cortex-a53" \
            -DWHISPER_BUILD_TESTS=OFF \
            -DWHISPER_BUILD_EXAMPLES=ON # Явно включаем сборку примеров
          
          # Собираем ТОЛЬКО ОДИН нужный нам пример 'main'
          make -j$(nproc) main

      - name: Package Executable and Dependencies
        run: |
          mkdir package
          cp build/bin/main package/
          # Упаковываем только базовые системные библиотеки
          aarch64-linux-gnu-ldd build/bin/main | grep "=> /" | awk '{print $3}' | xargs -I '{}' cp -L '{}' package/

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: optimized-whisper-64bit-package
          path: package
