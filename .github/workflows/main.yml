name: Build Statically Optimized Whisper.cpp for CoreELEC

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Install Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git make cmake g++-aarch64-linux-gnu

      - name: Clone whisper.cpp STABLE repository
        uses: "actions/checkout@v4"
        with:
          repository: "ggml-org/whisper.cpp"
          ref: "v1.6.0"
          submodules: true

      - name: Create Toolchain File
        run: |
          echo 'set(CMAKE_SYSTEM_NAME Linux)' > aarch64-toolchain.cmake
          echo 'set(CMAKE_SYSTEM_PROCESSOR aarch64)' >> aarch64-toolchain.cmake
          echo 'set(CMAKE_C_COMPILER aarch64-linux-gnu-gcc)' >> aarch64-toolchain.cmake
          echo 'set(CMAKE_CXX_COMPILER aarch64-linux-gnu-g++)' >> aarch64-toolchain.cmake

      - name: Compile Statically with CMake
        run: |
          # --- ФИНАЛЬНОЕ ИСПРАВЛЕНИЕ: Собираем ТОЛЬКО то, что нам нужно ---
          cmake -S . -B build \
            -DCMAKE_TOOLCHAIN_FILE=aarch64-toolchain.cmake \
            -DCMAKE_CXX_FLAGS="-O3 -mtune=cortex-a53 -static" \
            -DWHISPER_BUILD_TESTS=OFF \
            -DWHISPER_BUILD_EXAMPLES=OFF # Отключаем ВСЕ примеры по умолчанию

          # А теперь собираем ТОЛЬКО ОДИН нужный нам пример 'main'
          cmake --build build --target main -j

      - name: Check file size and type
        run: |
          echo "Checking built file:"
          ls -lh build/bin/main
          file build/bin/main

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: optimized-whisper-static-main
          path: build/bin/main
